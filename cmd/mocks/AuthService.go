// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	auth "deall/pkg/auth"
	context "context"

	entity "deall/cmd/entity"

	mock "github.com/stretchr/testify/mock"
)

// AuthService is an autogenerated mock type for the AuthService type
type AuthService struct {
	mock.Mock
}

// Login provides a mock function with given fields: ctx, data, password
func (_m *AuthService) Login(ctx context.Context, data string, password string) (*entity.Authorization, error) {
	ret := _m.Called(ctx, data, password)

	var r0 *entity.Authorization
	if rf, ok := ret.Get(0).(func(context.Context, string, string) *entity.Authorization); ok {
		r0 = rf(ctx, data, password)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.Authorization)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(ctx, data, password)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Logout provides a mock function with given fields: ctx, accessDetail
func (_m *AuthService) Logout(ctx context.Context, accessDetail *auth.AccessDetails) error {
	ret := _m.Called(ctx, accessDetail)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *auth.AccessDetails) error); ok {
		r0 = rf(ctx, accessDetail)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
