// Code generated by mockery v2.3.0. DO NOT EDIT.

package auth

import (
	"deall/pkg/auth"
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// MockToken is an autogenerated mock type for the Token type
type MockToken struct {
	mock.Mock
}

// CreateToken provides a mock function with given fields: userID, roleID
func (_m *MockToken) CreateToken(userID string, roleID string) (*auth.TokenDetails, error) {
	ret := _m.Called(userID, roleID)

	var r0 *auth.TokenDetails
	if rf, ok := ret.Get(0).(func(string, string) *auth.TokenDetails); ok {
		r0 = rf(userID, roleID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*auth.TokenDetails)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(userID, roleID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ExtractTokenMetadata provides a mock function with given fields: r
func (_m *MockToken) ExtractTokenMetadata(r *http.Request) (*auth.AccessDetails, error) {
	ret := _m.Called(r)

	var r0 *auth.AccessDetails
	if rf, ok := ret.Get(0).(func(*http.Request) *auth.AccessDetails); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*auth.AccessDetails)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*http.Request) error); ok {
		r1 = rf(r)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
